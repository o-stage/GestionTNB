<Application x:Class="GestionTNB.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="Color1" Color="#019ff8" />
        <SolidColorBrush x:Key="Color1Hover" Color="#019ff8" />
        <SolidColorBrush x:Key="Color1Pressed" Color="#4c75b5" />

        <SolidColorBrush x:Key="Color2" Color="#f2f2f2" />

        <SolidColorBrush x:Key="Color3" Color="#41bf78" />
        <SolidColorBrush x:Key="Color3Hover" Color="#2cbf6c" />
        <SolidColorBrush x:Key="Color3Pressed" Color="#41bf78" />
        <SolidColorBrush x:Key="Color4" Color="Black" />

        <CornerRadius x:Key="CornerRadius">5</CornerRadius>

        <SolidColorBrush x:Key="BackgroundColor" Color="#f0f3f6" />
        <SolidColorBrush x:Key="TextColor" Color="black" />


        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#f0f3f6" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#f0f3f6" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#f0f3f6" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   SnapsToDevicePixels="true" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="#ffffff" />
        <SolidColorBrush x:Key="Button.Static.Background" Color="#019ff8" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#019ff8" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#019ff8" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#019ff8" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#019ff8" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#019ff8" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#999999" />
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                        <Grid>
                            <Grid.Resources>
                                <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA" />
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="ContentElement"
                                                            To="#FF99C1E2"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0" Storyboard.TargetName="watermark_decorator"
                                                            To="#FF99C1E2"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="WatermarkStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unwatermarked" />
                                    <VisualState x:Name="Watermarked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentElement" To="0"
                                                             Storyboard.TargetProperty="Opacity" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Watermark" To="1"
                                                             Storyboard.TargetProperty="Opacity" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" To="1"
                                                             Storyboard.TargetProperty="Opacity" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1"
                                    Padding="{TemplateBinding Padding}">
                                <Grid x:Name="WatermarkContent"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Border x:Name="ContentElement" BorderBrush="Transparent" BorderThickness="0" />
                                    <Border x:Name="watermark_decorator" BorderBrush="Transparent" BorderThickness="0">
                                        <ContentControl x:Name="PART_Watermark" Focusable="False"
                                                        IsHitTestVisible="False" Opacity="0" Padding="2" />
                                    </Border>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="0"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Border x:Name="FocusVisual" BorderThickness="0" BorderBrush="#FF45D6FA"
                                            CornerRadius="1" IsHitTestVisible="False" Opacity="0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="#000000" />
            <Setter Property="IsTodayHighlighted" Value="True" />
            <Setter Property="SelectedDateFormat" Value="Short" />
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="Padding" Value="14,7" />
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual"
                                                             To="1" Storyboard.TargetProperty="Opacity" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0"
                                                                            Storyboard.TargetName="Background"
                                                                            To="#FF448DCA"
                                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" />
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="Background"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="Highlight"
                                                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                Duration="00:00:00.001"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Background="Transparent" FlowDirection="LeftToRight"
                                                  HorizontalAlignment="Center" Height="18" Margin="0"
                                                  VerticalAlignment="Center" Width="19">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                </Grid.RowDefinitions>
                                                <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="0"
                                                        CornerRadius="0,0,1,1" Grid.ColumnSpan="4" Margin="-1"
                                                        Opacity="0" Grid.RowSpan="4" Grid.Row="0" />
                                                <Border x:Name="Background" Background="#FF1F3B53"
                                                        BorderBrush="#FFFFFFFF" BorderThickness="0" CornerRadius=".5"
                                                        Grid.ColumnSpan="4" Margin="0,-1,0,0" Opacity="1"
                                                        Grid.RowSpan="3" Grid.Row="1" />
                                                <Border x:Name="BackgroundGradient" BorderBrush="#BF000000"
                                                        BorderThickness="0" CornerRadius=".5" Grid.ColumnSpan="4"
                                                        Margin="0,-1,0,0" Opacity="1" Grid.RowSpan="3" Grid.Row="1">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                            <GradientStop Color="#FF4084BD" />
                                                            <GradientStop Color="#FFAFCFEA" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                            <GradientStop Color="#FF494949" />
                                                            <GradientStop Color="#FF9F9F9F" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                                <Path Grid.Column="0" Grid.ColumnSpan="4"
                                                      Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                                      Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3"
                                                      RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3" Grid.Row="1"
                                                      Stretch="Fill" VerticalAlignment="Center" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}"
                                        Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0"
                                        Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top"
                                        Width="20" />
                                <DatePickerTextBox BorderThickness="0 0 0 2" Background="{TemplateBinding Background}"
                                                   FontSize="14" x:Name="PART_TextBox" Grid.Column="0"
                                                   Focusable="{TemplateBinding Focusable}"
                                                   HorizontalContentAlignment="Stretch" Grid.Row="0"
                                                   VerticalContentAlignment="Stretch" />
                                <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2"
                                      IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom"
                                           PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                                         Value="false">
                                <Setter Property="Foreground" TargetName="PART_TextBox"
                                        Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="14,7" />
            <Setter Property="Margin" Value="7" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Tag" Value="0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="borderShadow" BorderBrush="Black"
                                    BorderThickness="{Binding Path=Tag,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <BlurEffect />
                                </Border.Effect>
                            </Border>
                            <Border CornerRadius="5" x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}" />
                                <Setter Property="Tag" Value="1" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="10,5,10,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="FontSize" Value="14" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="Padding" Value="14,7" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="5" x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush"
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●" />
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="14,7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border CornerRadius="5" x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush"
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="AlternatingRowBackground" Value="#f6f6f6" />
            <Setter Property="RowBackground" Value="#e9e9e9" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Color2}" />
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource Color2}" />
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="30" />
            <Setter Property="SeparatorBrush" Value="{StaticResource Color2}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="{StaticResource Color2}" />
            <Setter Property="Background" Value="{StaticResource Color1}" />
            <Setter Property="BorderThickness" Value="0 0 1 0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border Margin="2 0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding SeparatorBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="CBCustomToggleButton" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}"
                    CornerRadius="{StaticResource CornerRadius}"
                    Margin="{TemplateBinding Margin}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True"
                    HorizontalAlignment="Stretch">
                <fa:IconBlock HorizontalAlignment="Right" Name="Icon" Icon="AngleDown"
                              Foreground="{TemplateBinding Foreground}" />
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource Color1}" />
            <Setter Property="Foreground" Value="{StaticResource Color4}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Margin" Value="2 1 0 1" />
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                                <Grid>
                                <ToggleButton Name="toggleButton"
                                              Background="{TemplateBinding Background}"
                                              Template="{StaticResource CBCustomToggleButton}"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Margin="{TemplateBinding Margin}"
                                              Padding="{TemplateBinding Padding}"
                                              Foreground="{StaticResource Color2}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />

                                <Grid IsHitTestVisible="False">
                                    <ContentPresenter Name="ContentSite"
                                                      Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      TextElement.Foreground="{StaticResource Color2}"
                                                      />
                                    <TextBox OverridesDefaultStyle="True" x:Name="PART_EditableTextBox"
                                             Foreground="{StaticResource Color2}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"
                                             Visibility="Collapsed"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                            <Popup Name="PART_Popup" Placement="Bottom"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid Name="DropDown"
                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                      SnapsToDevicePixels="True">
                                    <Border Name="DropDownBorder"
                                            Background="{StaticResource BackgroundColor}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility"
                                        Value="Visible" />
                                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource Color1Pressed}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>